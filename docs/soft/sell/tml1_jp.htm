<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"><link rel="stylesheet" type="text/css" href="../../img/TML.css"><Script src=../../img/menu.js></Script><title>一般的なビデオゲームの開発モジュール</title><meta name="keywords" content="中国ソフトウェアアウトソーシングは、オンラインゲーム、カードゲーム、麻雀ゲーム、チェス、バックギャモン、家主、ShowHand、ミニゲーム、ウェブ、ゲーム、ゲーム開発、ソリティアゲーマー、ポーカーゲーム、カード、モノポリーゲーム、ボードゲーム、バックギャモン、リスクボードカウント、パズル、数独ゲーム、ジグソーパズル、クロスワードパズル、Wordの検索パズル、アーケードゲーム、任天堂、ゲーム、カジノブラックジャック、ダートボード、エアホッケー、ビリヤードテーブル、テーブルサッカーテーブル、ピンポンテーブル、トリビアゲーム、アクションゲーム、ロジックゲーム、カジノポーカー、カジノゲーム、カジノのスロットマシン、カードランダムシャッフルシステム、、ポーカーチップ、カスタム再生カード、折りたたみカードテーブル、ゲームダウンロード、モバイルゲーム、子供向けゲームをトランプゲームを読むと、子供のパズル、教室ゲーム"><meta name="description" content="我々は、世界のOEM顧客向けの業界で20年以上の経験をもたらす中国ソフトウェアアウトソーシングのブランド、リードして、多くのカードを自社開発オンラインゲームの様々な、モバイルゲーム、ウェブ、ゲーム、カジュアルゲーム、チェスをゲームをアウトソーシングなどさまざまなソフトウェア製品を開発ゲーム、スポーツゲーム、ゲームをMMORPGの、カジノゲーム、ボードゲーム、段落500、最高の業界のリーダー。">
</head>
<body><center><div id="page"><div id="top_jp" align=right><br><br><br><br><br><br>
<a href="http://www.GuoRuan.com">&#x4E2D;&#x6587;&#x7248;</a> | <a href="../../index_EN.htm">English</a> | <a href="../../tml/Conncetus_jp.htm">お問い合わせ</a> | <a href="../../tml/Statement_jp.htm">法的通知</a> | <a href="../../tml/pay_jp.htm">支払い</a> | <a href="../../bug/index_jp.asp">フィードバックの提案</a></div></div>
<div style="width:100%;height:31px;background:url(../../img/TML8.jpg)">
<div style="width:1004" align=left>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="../../index_jp.htm"><img src="../../img/TML9_jp.jpg" title="ホームページ"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="../../tml/Introduction_jp.htm"><img src=../../img/TML10_jp.jpg title="会社情報"></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="../../tml/Production_jp.htm"><img src=../../img/TML11_jp.jpg title="製品とサービス"></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="../../tml/technology_jp.htm"><img src=../../img/TML12_jp.jpg title="技術トレーニング"></a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="../../tml/job_jp.htm"><img src=../../img/TML13_jp.jpg title="採用情報"></a>
  
  <div id="correlation">
<div id="t_select">
       <div id="t_selected" onClick="shlist();" onMouseOver="cws(true);" onMouseOut="cws(false);" onblur="hlist()">製品のデモサイト</div>
        <div id="t_select-list" onMouseOver="cws(true);" onMouseOut="cws(false);">
            <a href="http://rpg.guoruan.com/" onClick="changesever(this);" target="_blank">のWebゲームアクション</a>
            <a href="http://www.ds778.com/" onClick="changesever(this);" target="_blank">カードゲームのオンライン</a>
            <a href="http://www.euqq.com/" onClick="changesever(this);" target="_blank">EUのゲームオンライン</a>
            <a href="http://www.pukeyule.com/" onClick="changesever(this);" target="_blank">マッチゲームオンライン</a>
            <a href="http://www.hk163.com/" onClick="changesever(this);" target="_blank">ロイヤルカードゲーム</a>
            <a href="http://www.qeyx.com/" onClick="changesever(this);" target="_blank">QQのパズルオンライン</a>
            <a href="http://www.xydb.com/" onClick="changesever(this);" target="_blank">リアルマネーゲーム</a>
            <a href="http://www.fengzi.net/" onClick="changesever(this);" target="_blank">クレイジースタジオ</a>
            <a href="http://www.tml.cn/" onClick="changesever(this);" target="_blank">TMLにスタジオ</a> 
			</div>			
    </div>
</div>
</div>
</div>

<div align="center"  id="banner-small"><img src="../../img/b-xw_jp.jpg" width="990" height="120"></div>

<div id="contentbox">
<div id="content">
<div id="main-small">
<div class="linemenu">
   あなたの現在の位置:<a href="../../index_jp.htm">ホーム</a> &gt; <a href="../../tml/Production_jp.htm">製品システム</a></div>
  
  <table>
  
  <tr><td valign=top>
<div id="producemenu"><iframe src="../../tml/menu_jp.htm" height=1100 width=210 scrolling="no" border="0" frameborder="0"></iframe></div></td>
<td valign=top>
<div id="txt">

 <h1><SPAN id="result_box"><SPAN title="" Yc="一般的なビデオゲームの開発モジュール" Zc="一般的なビデオゲームの開発モジュール" closure_uid_s2qach="136">一般的なビデオゲームの開発モジュール</SPAN></SPAN></h1>
 <SPAN id="result_box2"><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="视频模块功能:" onMouseOut="this.style.backgroundColor='#fff'">ビデオモジュールの機能： <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（1）ソフトウェア製品の開発は人民共和国の法律、これらの製品に関連を満たしているか確認します。" onMouseOut="this.style.backgroundColor='#fff'">（1）ソフトウェア製品の開発は人民共和国の法律、これらの製品に関連を満たしているか確認します。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（2） 检测本地是否存在可用的视频输入设备。" onMouseOut="this.style.backgroundColor='#fff'">（2）ローカル可能なビデオ入力デバイスの存在を検出します。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（3）かどうかを利用可能なローカルおよびオーディオ入力デバイスです。" onMouseOut="this.style.backgroundColor='#fff'">（3）かどうかを利用可能なローカルおよびオーディオ入力デバイスです。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（4）を作成することができます）指定されたサイズ、ウィンドウ（の場所を作成します。" onMouseOut="this.style.backgroundColor='#fff'">（4）を作成することができます）指定されたサイズ、ウィンドウ（の場所を作成します。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（5）ウィンドウの破壊。" onMouseOut="this.style.backgroundColor='#fff'">（5）ウィンドウの破壊。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（6）指定されたウィンドウのハンドルを取得するために開かれている。" onMouseOut="this.style.backgroundColor='#fff'">（6）指定されたウィンドウのハンドルを取得するために開かれている。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（7）指定されたウィンドウにビデオデータを表示します。" onMouseOut="this.style.backgroundColor='#fff'">（7）指定されたウィンドウにビデオデータを表示します。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（8）オーディオデータをブロードキャストします。 。" onMouseOut="this.style.backgroundColor='#fff'">（8）オーディオデータをブロードキャストします。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（9）ローカルビデオ入力デバイス（圧縮する）からデータを取得する。。" onMouseOut="this.style.backgroundColor='#fff'">（9）ローカルビデオ入力デバイス（圧縮する）からデータを取得する。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（10）ローカルオーディオ入力機器（圧縮する）データを取得する。" onMouseOut="this.style.backgroundColor='#fff'">（10）ローカルオーディオ入力機器（圧縮する）データを取得する。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（11）オーディオとビデオのデータを提供するためのメソッドを同期させることができます。" onMouseOut="this.style.backgroundColor='#fff'">（11）オーディオとビデオのデータを提供するためのメソッドを同期させることができます。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（12）オーディオとビデオ品質を提供するように設定することができます。" onMouseOut="this.style.backgroundColor='#fff'">（12）オーディオとビデオ品質を提供するように設定することができます。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（13）ビデオサイズを設定することができます。" onMouseOut="this.style.backgroundColor='#fff'">（13）ビデオサイズを設定することができます。 <BR>
 </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="（14）オーディオとビデオのデータ圧縮、満たすためにも、ネットワークの伝送の要件" onMouseOut="this.style.backgroundColor='#fff'">（14）オーディオとビデオのデータ圧縮、満たすためにも、ネットワークの伝送の要件</SPAN></SPAN><br />
           
           <p><SPAN id="result_box3"><SPAN title="" Yc="2つのDLLファイルがあります" Zc="2つのDLLファイルがあります  " closure_uid_4afhvj="22">2つのDLLファイルがあります<BR>
           </SPAN><SPAN title="" Yc="vcoder.dll和AVMng.dll" Zc="vcoder.dllとAVMng.dll  " closure_uid_4afhvj="23">vcoder.dllとAVMng.dll<BR>
           </SPAN><SPAN title="" Yc="ビデオとオーディオの圧縮と解凍の責任vcoder.dll  " Zc="ビデオとオーディオの圧縮と解凍の責任vcoder.dll  " closure_uid_4afhvj="24">ビデオとオーディオの圧縮と解凍の責任vcoder.dll<BR>
           </SPAN><SPAN title="" Yc="AVMng.dllの作成、ビデオやオーディオを管理するオブジェクトを担当" Zc="AVMng.dllの作成、ビデオやオーディオを管理するオブジェクトを担当" closure_uid_4afhvj="25">AVMng.dllの作成、ビデオやオーディオを管理するオブジェクトを担当</SPAN></SPAN><br />
           </p>
             <p><SPAN id="result_box4"><SPAN title="" Yc="開発方法：" Zc="開発方法：  " closure_uid_4afhvj="32">開発方法：<BR>
             </SPAN><SPAN title="" Yc="が含まれてヘッダがTMLavmng.hファイル" Zc="が含まれてヘッダがTMLavmng.hファイル  " closure_uid_4afhvj="33">が含まれてヘッダがTMLavmng.hファイル<BR>
             </SPAN><SPAN title="" Yc="ウィルTMLAVMng.libプロジェクトファイルTMLAVMng.rar ,,,,,,前に購入する必要が格納されて含めることができます利用可能" Zc="ウィルTMLAVMng.libプロジェクトファイルTMLAVMng.rar ,,,,,,前に購入する必要が格納されて含めることができます利用可能  " closure_uid_4afhvj="34">ウィルTMLAVMng.libプロジェクトファイルTMLAVMng.rar   ,,,,,,前に購入する必要が格納されて含めることができます利用可能<BR>
             </SPAN><SPAN title="" Yc="参照してください例では、使用するソースコード" Zc="参照してください例では、使用するソースコード" closure_uid_4afhvj="35">参照してください例では、使用するソースコード</SPAN></SPAN></p>
           <p>&nbsp;</p>
             <p>#pragma once<br />
               #ifndef CTML_AUDIO_VIDEO_MANAGER_2005<br />
               #define CTML_AUDIO_VIDEO_MANAGER_2005</p>
             <p>//<SPAN id="result_box10"><SPAN title="" tc="GoReat (C) www.GuoRuan.com All rights reserved" uc="GoReat (C) www.GuoRuan.com All rights reserved." closure_uid_qeu8vi="70">GoReat (C) www.GuoRuan.com All rights   reserved.</SPAN></SPAN><br />
               // TML&gt;&gt; Crazy Studios www.FengZi.net </p>
             <p>//<SPAN id="result_box11"><SPAN title="" tc="Defined output" uc="Defined output" closure_uid_qeu8vi="74">Defined output</SPAN></SPAN><br />
               #define EXT_CLASS_Video _declspec(dllimport)//<SPAN id="result_box12"><SPAN title="" tc="Import-based DLL" uc="Import-based DLL" closure_uid_qeu8vi="76">Import-based DLL</SPAN></SPAN></p>
             <p>#define SIZE_AUDIO_FRAME	960//<SPAN id="result_box13"><SPAN title="" tc="Recording frame size" uc="Recording frame size" closure_uid_qeu8vi="78">Recording frame   size</SPAN></SPAN><br />
               #define SIZE_AUDIO_PACKED	60//<SPAN id="result_box14"><SPAN title="" tc="Recording Package Size" uc="Recording Package Size" closure_uid_qeu8vi="80">Recording Package   Size</SPAN></SPAN><br />
               #define TML_WAV_NUM_BUF		10//<SPAN id="result_box15"><SPAN title="" tc="For continuous recording, with 10 buffer, to provide audio and video data synchronization" uc="For continuous recording, with 10 buffer, to provide audio and video data synchronization" closure_uid_qeu8vi="82">For continuous recording, with 10 buffer, to provide   audio and video data synchronization</SPAN></SPAN><br />
               #define UDP_PACK_COUNT		5//<SPAN id="result_box16"><SPAN title="" tc="To make video continuously, using sub-5 Video" uc="To make video continuously, using sub-5 Video" closure_uid_qeu8vi="84">To   make video continuously, using sub-5 Video</SPAN></SPAN><br />
               #define MAX_VIDEO			6//<SPAN id="result_box17"><SPAN title="" tc="he maximum number of video" uc="The maximum number of video" closure_uid_qeu8vi="88">The maximum number of   video</SPAN></SPAN><br />
               #define MAX_UDP_SIZE   		1460//<SPAN id="result_box18"><SPAN title="" tc="Microsoft's argument is 1460Byte best to make audio and video data compression ratio to meet the minimum network transmission requirements" uc="Microsoft's argument is 1460Byte best to make audio and video data compression ratio to meet the minimum network transmission requirements" closure_uid_qeu8vi="90">Microsoft's argument is 1460Byte best to make audio and   video data compression ratio to meet the minimum network transmission   requirements</SPAN></SPAN></p>
             <p>#define FRM_SYS_MSG			WM_USER+501 //<SPAN id="result_box19"><SPAN title="" tc="System prompts a message ID" uc="System prompts a message ID" closure_uid_qeu8vi="92">System prompts a   message ID</SPAN></SPAN><br />
               #define FRM_SYS_MSG_CHAR	WM_USER+502 //<SPAN id="result_box20"><SPAN title="" tc="Information message prompted characters" uc="Information message prompted characters" closure_uid_qeu8vi="94">Information   message prompted characters</SPAN></SPAN><br />
               #define SEND_VIDEO			WM_USER+702  //<SPAN id="result_box21"><SPAN title="" tc="Send video message" uc="Send video message" closure_uid_qeu8vi="98">Send video message</SPAN></SPAN><br />
               #define SEND_AUDIO			WM_USER+503  //<SPAN id="result_box22"><SPAN title="" tc="Send audio messages" uc="Send audio messages" closure_uid_qeu8vi="102">Send audio   messages</SPAN></SPAN><br />
               #define BAND_VIDEO			WM_USER+504  //<SPAN id="result_box23"><SPAN title="" tc="Bulk Video Information" uc="Bulk Video Information" closure_uid_qeu8vi="104">Bulk Video   Information</SPAN></SPAN><br />
               #define BAND_AUDIO			WM_USER+505  //<SPAN id="result_box24"><SPAN title="" tc="Bulk audio information" uc="Bulk audio information" closure_uid_qeu8vi="106">Bulk audio   information</SPAN></SPAN></p>
             <p>#define OUT_BMP_WIDTH	160<br />
               #define OUT_BMP_HEIGHT	120</p>
             <p>#define TMLbmpSize OUT_BMP_WIDTH*OUT_BMP_HEIGHT*3//<SPAN id="result_box25"><SPAN title="" tc="When biBitCount = 24 hours, 1 pixel, 3 bytes" uc="When biBitCount = 24 hours, 1 pixel, 3 bytes" closure_uid_qeu8vi="108">When biBitCount = 24 hours, 1 pixel, 3   bytes</SPAN></SPAN>;</p>
             <p>#define FLAG_AUDIO			0x3131<br />
               #define FLAG_VIDEO			0x3132</p>
             <p>#include &lt;vfw.h&gt;<br />
               #include &quot;TMLvcoder.h&quot;</p>
             <p>class CTMLvcoder //<SPAN id="result_box26"><SPAN title="" tc="Encapsulates the compression function" uc="Encapsulates the compression function" closure_uid_qeu8vi="110">Encapsulates   the compression function</SPAN></SPAN><br />
               {<br />
               public://<SPAN id="result_box27"><SPAN title="" tc="Public function can be called external" uc="Public function can be called external" closure_uid_qeu8vi="112">Public   function can be called external</SPAN></SPAN><br />
               CTMLvcoder() ; <br />
               ~CTMLvcoder() ; <br />
               void            Open();<br />
               void            Close();<br />
               int				dec_core(LPVOID bitstream, LPVOID image, int bs_size) ;<br />
               int				enc_core(LPVOID image,LPVOID bitstream, int *key);</p>
             <p>private://<SPAN id="result_box28"><SPAN title="" tc="Internal variables, the basic properties of the video" uc="Internal variables, the basic properties of the video" closure_uid_qeu8vi="114">Internal variables, the basic properties of the   video</SPAN></SPAN><br />
               static void     XVID_GLOBAL_INIT();<br />
               void *           m_enc_handle;<br />
               void *           m_dec_handle;<br />
               };</p>
             <p>//<SPAN id="result_box29"><SPAN title="" tc="Video packet (does not contain video data)" uc="Video packet (does not contain video data)" closure_uid_qeu8vi="116">Video   packet (does not contain video data)</SPAN></SPAN><br />
               typedef struct<br />
               {<br />
               short	flag;<br />
               BYTE	id;<br />
               BYTE	bDeskStation;//<SPAN id="result_box30"><SPAN title="" tc="Location" uc="Location" closure_uid_qeu8vi="118">Location</SPAN></SPAN><br />
               BYTE	subid;<br />
               unsigned short video_size;<br />
               }PACK_VIDEO;</p>
             <p>//<SPAN id="result_box31"><SPAN title="" tc="Audio data packets (including audio data)" uc="Audio data packets (including audio data)" closure_uid_qeu8vi="122">Audio   data packets (including audio data)</SPAN></SPAN><br />
               typedef struct<br />
               {	short flag; <br />
               BYTE bDeskStation;//<SPAN id="result_box32"><SPAN title="" tc="Table Position" uc="Table Position" closure_uid_qeu8vi="124">Table Position</SPAN></SPAN><br />
               BYTE data[SIZE_AUDIO_PACKED];<br />
               }PACK_AUDIO;</p>
             <p>//<SPAN id="result_box33"><SPAN title="" tc="Video Package" uc="Video Package" closure_uid_qeu8vi="126">Video Package</SPAN></SPAN><br />
               typedef struct <br />
               {<br />
               BITMAPINFO* header;<br />
               LPVOID bits;<br />
               }VideoPack;</p>
             <p>//<SPAN id="result_box34"><SPAN title="" tc="Video display window data structure" uc="Video display window data structure" closure_uid_qeu8vi="128">Video display   window data structure</SPAN></SPAN><br />
               typedef struct <br />
               {<br />
               HWND m_hVideoWnd;<br />
               bool m_bOpenVideo;<br />
               bool m_bOpenVioce;<br />
               bool m_bCamera;<br />
               }VideoViewStruct;</p>
             <p>//<SPAN id="result_box35"><SPAN title="" tc="Video Control Class" uc="Video Control Class" closure_uid_qeu8vi="132">Video Control   Class</SPAN></SPAN><br />
               class EXT_CLASS_Video TMLavmng<br />
               {<br />
               /**************************<SPAN id="result_box36"><SPAN title="" tc="Recording part of the" uc="Recording part of the" closure_uid_qeu8vi="136">Recording part of   the</SPAN></SPAN>************************************/<br />
               private:<br />
               //<SPAN id="result_box37"><SPAN title="" tc="Initialize audio" uc="Initialize audio" closure_uid_qeu8vi="138">Initialize audio</SPAN></SPAN><br />
               bool initAudio();<br />
               //<SPAN id="result_box38"><SPAN title="" tc="Voice input thread, including voice compression" uc="Voice input thread, including voice compression" closure_uid_qeu8vi="140">Voice input thread, including voice   compression</SPAN></SPAN><br />
               static DWORD WINAPI AudioInThreadProc(LPVOID lpParameter);<br />
               //<SPAN id="result_box39"><SPAN title="" tc="Open the recording equipment" uc="Open the recording equipment" closure_uid_qeu8vi="144">Open the recording   equipment</SPAN></SPAN><br />
               BOOL OpenDev(WAVEFORMATEX* pfmt,DWORD dwCallback,DWORD dwCallbackInstance,DWORD fdwOpen);<br />
               //<SPAN id="result_box40"><SPAN title="" tc="A group of memory allocated for the recording" uc="A group of memory allocated for the recording" closure_uid_qeu8vi="146">A   group of memory allocated for the recording</SPAN></SPAN><br />
               BOOL AllocBuffer();<br />
               //<SPAN id="result_box41"><SPAN title="" tc="Compressed audio data and send out the original" uc="Compressed audio data and send out the original" closure_uid_qeu8vi="148">Compressed audio data and send out the   original</SPAN></SPAN><br />
               void OnEncodeAudioData(char* pin);</p>
             <p> //<SPAN id="result_box42"><SPAN title="" tc="Variable" uc="Variable" closure_uid_qeu8vi="150">Variable</SPAN></SPAN><br />
               //<SPAN id="result_box43"><SPAN title="" tc="Audio Network Packet" uc="Audio Network Packet" closure_uid_qeu8vi="152">Audio Network   Packet</SPAN></SPAN><br />
               PACK_AUDIO m_AudioPack;<br />
               //<SPAN id="result_box44"><SPAN title="" tc="Local recording of data packets" uc="Local recording of data packets" closure_uid_qeu8vi="154">Local recording of   data packets</SPAN></SPAN><br />
               char					m_AudioLocal[SIZE_AUDIO_FRAME];<br />
               //<SPAN id="result_box45"><SPAN title="" tc="Recording handle" uc="Recording handle" closure_uid_qeu8vi="156">Recording handle</SPAN></SPAN><br />
               HANDLE					m_hAudioIn;<br />
               //<SPAN id="result_box46"><SPAN title="" tc="Recording thread ID" uc="Recording thread ID" closure_uid_qeu8vi="158">Recording thread   ID</SPAN></SPAN><br />
               DWORD					m_dwAudioInId;<br />
               //<SPAN id="result_box47"><SPAN title="" tc="Recording hardware handle" uc="Recording hardware handle" closure_uid_qeu8vi="162">Recording hardware   handle</SPAN></SPAN><br />
               HWAVEIN					m_hIn;<br />
               WAVEHDR*				m_pHdr;<br />
               /**************************<SPAN id="result_box48"><SPAN title="" tc="Some broadcast" uc="Some broadcast" closure_uid_qeu8vi="164">Some broadcast</SPAN></SPAN>************************************/</p>
             <p> //<SPAN id="result_box49"><SPAN title="" tc="Audio output thread, including the audio decoding" uc="Audio output thread, including the audio decoding" closure_uid_qeu8vi="166">Audio output thread, including the audio   decoding</SPAN></SPAN><br />
               static DWORD WINAPI AudioOutThreadProc(LPVOID lpParameter);<br />
               //<SPAN id="result_box50"><SPAN title="" tc="Play a piece of data" uc="Play a piece of data" closure_uid_qeu8vi="168">Play a piece of   data</SPAN></SPAN><br />
               BOOL AudioPlay(char* buf,UINT uSize);<br />
               //<SPAN id="result_box51"><SPAN title="" tc="Variable" uc="Variable" closure_uid_qeu8vi="170">Variable</SPAN></SPAN><br />
               //<SPAN id="result_box52"><SPAN title="" tc="After decoding the broadcasting data" uc="After decoding the broadcasting data" closure_uid_qeu8vi="172">After   decoding the broadcasting data</SPAN></SPAN><br />
               char m_AudioRemote[SIZE_AUDIO_FRAME];<br />
               //<SPAN id="result_box53"><SPAN title="" tc="Broadcast handle" uc="Broadcast handle" closure_uid_qeu8vi="174">Broadcast handle</SPAN></SPAN><br />
               HANDLE m_hAudioOut;<br />
               //<SPAN id="result_box54"><SPAN title="" tc="Thread ID Broadcasting" uc="Thread ID Broadcasting" closure_uid_qeu8vi="176">Thread ID   Broadcasting</SPAN></SPAN><br />
               DWORD m_dwAudioOutId;<br />
               //<SPAN id="result_box55"><SPAN title="" tc="Broadcast the number of buffer blocks" uc="Broadcast the number of buffer blocks" closure_uid_qeu8vi="178">Broadcast   the number of buffer blocks</SPAN></SPAN><br />
               int m_iAudioOutBuf;<br />
               //<SPAN id="result_box56"><SPAN title="" tc="Broadcast hardware handle" uc="Broadcast hardware handle" closure_uid_qeu8vi="180">Broadcast hardware   handle</SPAN></SPAN><br />
               HWAVEOUT m_hOut;<br />
               /**************************<SPAN id="result_box57"><SPAN title="" tc="Video section" uc="Video section" closure_uid_qeu8vi="182">Video section</SPAN></SPAN>************************************/<br />
               //<SPAN id="result_box58"><SPAN title="" tc="Private variables" uc="Private variables" closure_uid_qeu8vi="188">Private variables</SPAN></SPAN><br />
               private:<br />
               //<SPAN id="result_box59"><SPAN title="" tc="Definition codec pointer" uc="Definition codec pointer" closure_uid_qeu8vi="194">Definition codec   pointer</SPAN></SPAN><br />
               CTMLvcoder *		m_pVcoder[MAX_VIDEO]; <br />
               bool				m_bEnable;//<SPAN id="result_box60"><SPAN title="" tc="Enabled" uc="Enabled" closure_uid_qeu8vi="198">Enabled</SPAN></SPAN><br />
               UINT				m_iPackID;//<SPAN id="result_box61"><SPAN title="" tc="Package ID" uc="Package ID" closure_uid_qeu8vi="200">Package ID</SPAN></SPAN><br />
               char				m_VideoPack[MAX_UDP_SIZE];// want to send the video package, compressed<br />
               char				m_VideoRev[MAX_VIDEO][MAX_UDP_SIZE*UDP_PACK_COUNT];//<SPAN id="result_box62"><SPAN title="" tc="Received video packets, each user of a variable can not be mixed" uc="Received video packets, each user of a variable can not be mixed" closure_uid_qeu8vi="204">Received video packets, each user of a variable can not   be mixed</SPAN></SPAN><br />
               char				m_OutBmp[TMLbmpSize];//<SPAN id="result_box63"><SPAN title="" tc="Canvas unlock remote cache, the so-called double-buffering, many of the drawing can be mixed" uc="Canvas unlock remote cache, the so-called double-buffering, many of the drawing can be mixed" closure_uid_qeu8vi="208">Canvas unlock remote cache, the so-called   double-buffering, many of the drawing can be mixed</SPAN></SPAN><br />
               char				m_MyEnData[OUT_BMP_WIDTH*OUT_BMP_WIDTH];<br />
               HWND				m_hTMLframe;//<SPAN id="result_box64"><SPAN title="" tc="Framework handle" uc="Framework handle" closure_uid_qeu8vi="210">Framework handle</SPAN></SPAN><br />
               BYTE				m_bTeamPeople;//<SPAN id="result_box65"><SPAN title="" tc="Desktop size" uc="Desktop size" closure_uid_qeu8vi="212">Desktop size</SPAN></SPAN><br />
               BYTE				m_bMeDeskStation;//<SPAN id="result_box66"><SPAN title="" tc="My location" uc="My location" closure_uid_qeu8vi="214">My location</SPAN></SPAN><br />
               VideoViewStruct  *	m_pVideoView[MAX_VIDEO]; //<SPAN id="result_box67"><SPAN title="" tc="Video handle" uc="Video handle" closure_uid_qeu8vi="216">Video handle</SPAN></SPAN><br />
               HWND				m_CapWnd;<br />
               CAPTUREPARMS		m_CapConfig;<br />
               BITMAPINFO			m_GetBitFormat;<br />
               BITMAPINFO  		m_SetBitFormat;<br />
               bool				m_bCanP2P[MAX_VIDEO]; //<SPAN id="result_box68"><SPAN title="" tc="Whether through the P2P" uc="Whether through the P2P" closure_uid_qeu8vi="218">Whether through the   P2P</SPAN></SPAN></p>
             <p>private://<SPAN id="result_box69"><SPAN title="" tc="Private Function" uc="Private Function" closure_uid_qeu8vi="220">Private Function</SPAN></SPAN><br />
               //<SPAN id="result_box70"><SPAN title="" tc="Callback function" uc="Callback function" closure_uid_qeu8vi="222">Callback function</SPAN></SPAN><br />
               static LRESULT CALLBACK OnCaptureVideo(HWND hWnd, LPVIDEOHDR lpheader);</p>
             <p> //Whether to send video<br />
               void CanSendVideoData(LPVOID pv); </p>
             <p> //<SPAN id="result_box71"><SPAN title="" tc="Video compression and send" uc="Video compression and send" closure_uid_qeu8vi="228">Video compression and   send</SPAN></SPAN><br />
               void EncodeSendVideo(LPVOID pv);</p>
             <p> ///<SPAN id="result_box72"><SPAN title="" tc="Initial Compression Manager" uc="Initial Compression Manager" closure_uid_qeu8vi="230">Initial Compression   Manager</SPAN></SPAN> <br />
               void InitParam();</p>
             <p> //<SPAN id="result_box73"><SPAN title="" tc="Send Video" uc="Send Video" closure_uid_qeu8vi="232">Send Video</SPAN></SPAN><br />
               void SendVideo(BYTE bDstStation,VideoPack * pVideoPack);</p>
             <p> //<SPAN id="result_box74"><SPAN title="" tc="Photo" uc="Photo" closure_uid_qeu8vi="234">Photo</SPAN></SPAN><br />
               void Camera(VideoPack * pVideoPack);</p>
             <p>public:<br />
               //<SPAN id="result_box75"><SPAN title="" tc="Constructor" uc="Constructor" closure_uid_qeu8vi="236">Constructor</SPAN></SPAN><br />
               TMLavmng(void);</p>
             <p> //<SPAN id="result_box76"><SPAN title="" tc="Destructor" uc="Destructor" closure_uid_qeu8vi="240">Destructor</SPAN></SPAN><br />
               ~TMLavmng(void);</p>
             <p> //<SPAN id="result_box77"><SPAN title="" tc="Initialization" uc="Initialization" closure_uid_qeu8vi="242">Initialization</SPAN></SPAN><br />
               void initAVmng(BYTE bTeamPeople,BYTE bMeDeskStation,HWND hTMLframe);</p>
             <p> //<SPAN id="result_box78"><SPAN title="" tc="Available locally and the existence of the video input device" uc="Available locally and the existence of the video input device" closure_uid_qeu8vi="244">Available locally and the existence of the video input   device</SPAN></SPAN><br />
               bool IsExistCap();</p>
             <p> //<SPAN id="result_box79"><SPAN title="" tc="Detect the existence of the local audio input device available" uc="Detect the existence of the local audio input device available" closure_uid_qeu8vi="246">Detect the existence of the local audio input device   available</SPAN></SPAN><br />
               bool IsExistAudio();</p>
             <p> //<SPAN id="result_box80"><SPAN title="" tc="Set audio and video quality" uc="Set audio and video quality" closure_uid_qeu8vi="248">Set audio and video   quality</SPAN></SPAN><br />
               void SetQuality(BYTE tQuality);</p>
             <p> //<SPAN id="result_box81"><SPAN title="" tc="Close camera" uc="Close camera" closure_uid_qeu8vi="250">Close camera</SPAN></SPAN><br />
               void ExitCap();</p>
             <p> //<SPAN id="result_box82"><SPAN title="" tc="Open the camera" uc="Open the camera" closure_uid_qeu8vi="252">Open the camera</SPAN></SPAN><br />
               void OpenCap(int DrvID);</p>
             <p> //<SPAN id="result_box83"><SPAN title="" tc="Video decoding and playback" uc="Video decoding and playback" closure_uid_qeu8vi="254">Video decoding and   playback</SPAN></SPAN><br />
               void OnDecodeVideoData(PACK_VIDEO* ppv);</p>
             <p> //<SPAN id="result_box84"><SPAN title="" tc="Audio decoding, and audio data sent to the window you want the data" uc="Audio decoding, and audio data sent to the window you want the data" closure_uid_qeu8vi="256">Audio decoding, and audio data sent to the window you   want the data</SPAN></SPAN><br />
               void OnDecodeAudioData(char *pin,BYTE bDstStation);</p>
             <p> //<SPAN id="result_box85"><SPAN title="" tc="The seat set to P2P" uc="The seat set to P2P" closure_uid_qeu8vi="258">The seat set to   P2P</SPAN></SPAN><br />
               void SetCanP2P(BYTE bStation);</p>
             <p> //<SPAN id="result_box86"><SPAN title="" tc="The seat can be P2P" uc="The seat can be P2P" closure_uid_qeu8vi="260">The seat can be   P2P</SPAN></SPAN><br />
               bool GetCanP2P(BYTE bStation);</p>
             <p> //<SPAN id="result_box87"><SPAN title="" tc="Get a pointer to the video view" uc="Get a pointer to the video view" closure_uid_qeu8vi="262">Get a pointer to   the video view</SPAN></SPAN><br />
               VideoViewStruct * GetVideoView(BYTE bStation);</p>
             <p> //<SPAN id="result_box88"><SPAN title="" tc="Set the video view of the pointer" uc="Set the video view of the pointer" closure_uid_qeu8vi="264">Set the video   view of the pointer</SPAN></SPAN><br />
               void SetVideoView(VideoViewStruct * pVideoView,BYTE bStation);<br />
  <br />
               //<SPAN id="result_box89"><SPAN title="" tc="Drawing video function static member functions" uc="Drawing video function static member functions" closure_uid_qeu8vi="266">Drawing video function static member   functions</SPAN></SPAN><br />
               static void DrawVideo(HWND h, <br />
               IN int      xDst,<br />
               IN int      yDst,<br />
               IN int      dxDst,<br />
               IN int      dyDst,<br />
               VideoPack * pVideoPack<br />
               );<br />
               };</p>
           <p>#endif</p>
             <p><a style="color:#F00" href="vcode.rar"><SPAN id="result_box90"><SPAN title="" Yc="ソースコードをダウンロード" Zc="ソースコードをダウンロード" closure_uid_s2qach="134">ソースコードをダウンロード</SPAN></SPAN> http://www.guoruan.com/soft/sell/vcode.rar</a></p>


</td>
         </tr>

</table>
</td></tr></table>


<marquee scrollAmount=10000 width="1" height="6">
 特定の製品は次のとおりです: <BR>
EUQQ地主、EUQQチェスソフトウェア、EUQQカードゲーム、EUQQ麻雀ゲーム、EUQQチェスゲームのソースコード、チェスゲーム、EUQQチェスゲーム、EUQQチェスゲームのコードのEUQQはチェスゲームのプラットフォームを販売EUQQのウェブ版、EUQQflashチェスゲームのソースコード、EUQQflashのボードゲーム、EUQQflashチェスゲーム、EUQQflashチェスゲームソフト、EUQQflashチェスゲームの開発、EUQQチェスゲームのソースコード、購入EUQQチェスゲームは、チェスの指導者のネットワークを購入するEUQQネットワークチェスプラットフォームEUQQネットワークのチェスゲームの開発、EUQQチェスゲームの開発、良いお友達とボードゲームの開発、EUQQチェスゲーム開発会社、EUQQネットワークチェス開発会社、EUQQビデオゲーム開発、EUQQビデオ音声チェスゲーム開発 
</marquee>  
                   

  <h1>&nbsp;</h1>
<p><br>
</p>
</div>
</div>
</div>
<div class="clear"></div>

<div id="foot">
    <div class="copyright">
        <div class="foot-nav">
              <dl>
                <dd>
                   <a href="Javascript:window.external.addFavorite('http://www.guoruan.com','國軟株式会社')">ブックマーク</a>
                </dd>
                <dd>
                    <a href="../../index_jp.htm">ホーム  </a></dd><dd><a href="../../tml/pay_jp.htm">支払い </a></dd>
                </dd>
                <dd>
                    <a href="../../tml/Conncetus_jp.htm">お問い合わせ</a></dd><dd><a href="../../bug">フィードバックバグ</a></dd>
                <dd>
                    <a onClick="this.style.behavior='url(#default#homepage)';this.setHomePage('http://www.guoruan.com');" href="#">確認ホーム</a></dd>
            </dl>
</div>
        <div class="copyinfo">
          著作権© 1997 - 2010 國軟すべての権利予約.</div>
</div></div>
</body>
</html>