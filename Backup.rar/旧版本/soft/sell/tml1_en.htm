<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" type="text/css" href="../../img/TML.css"><Script src=../../img/menu.js></Script><title>Common video game development module</title><meta name="keywords" content="China Software Outsourcing,Online Games,Card Games,Mahjong Games,Chess,backgammon,Landlords,ShowHand,Mini-games,web games,Game Development,Solitaire Gamers,Poker Games,Card Counting,Monopoly Games,Board Games,Backgammon,Risk Boards,Puzzles,Sudoku Games,Jigsaw Puzzles,Crossword Puzzles,Word Search Puzzles,Arcade Games,Nintendo,Video Games,Casino Blackjack,Dart Boards,Air Hockey,Pool Tables,Foosball Tables,Ping Pong Tables,Trivia Games,Action Games,Logic Games,Casino Poker,Casino Games,Casino Slot Machines,Card Shuffler,Playing Cards,Poker Chips,Custom Playing Cards,Folding Card Tables,Game Downloads,Mobile Games,Kids Games,Reading Games,Kids Puzzles,Classroom Games"><meta name="description" content="We are the leading of China Software Outsourcing brand,bring 20 years experience in the industry for global OEM customers develop various software products,including outsourcing the game more variety of self-developed online games,mobile games,web games,casual games,chess card games,sports games,MMORPG games,Casino games,Board games,paragraph 500,the highest industry leader.">
</head>
<body><center><div id="page"><div id="top_EN" align=right><br><br><br><br><br><br>
<a onClick="this.style.behavior='url(#default#homepage)';this.setHomePage('http://www.guoruan.com');" href="#">Set as Home</a>|<a href="Javascript:window.external.addFavorite('http://www.guoruan.com','GoReat - China's Software Outsourcing Brand')">Add Bookmark</a>|<a href="../../tml/Conncetus_EN.htm">Contact Us</a><a href="../../tml/Conncetus_EN.htm"></a>|<a href="../../tml/Statement_EN.htm">Legal Notices</a><a href="../../tml/Statement_EN.htm"></a>|<a href="../../tml/pay_EN.htm">Payment</a><a href="../../tml/pay_EM.htm"></a></div></div>
<div style="width:100%;height:31px;background:url(../../img/TML8.jpg)">
<div style="width:1004" align=left>　　　　　　
<a href="../../index_EN.htm"><img src="../../img/TML9_EN.jpg" title="Home Page"></a><a href="../../tml/Introduction_EN.htm">&nbsp; &nbsp;&nbsp;<img src=../../img/TML10_EN.jpg title="Corporate Info"></a>　<a href="../../tml/Production_EN.htm"><img src=../../img/TML11_EN.jpg title="Products and Services"></a> &nbsp;<a href="../../tml/technology_EN.htm">&nbsp;<img src=../../img/TML12_EN.jpg title="Technical Training"></a>　<a href="../../tml/job_EN.htm">&nbsp;<img src=../../img/TML13_EN.jpg title="Careers & Jobs"></a>

  <div id="correlation">
    <div id="t_select">
        <div id="t_selected" onClick="shlist();" onMouseOver="cws(true);" onMouseOut="cws(false);"
            onblur="hlist()">
           Product Demo Website</div>
        <div id="t_select-list" onMouseOver="cws(true);" onMouseOut="cws(false);">
            <a href="http://rpg.guoruan.com/" onClick="changesever(this);" target="_blank">RPG Web Games</a>
            <a href="http://www.euqq.com/" onClick="changesever(this);" target="_blank">EU Board Games Online</a>
            <a href="http://www.pukeyule.com/" onClick="changesever(this);" target="_blank">Match Games Online</a>
            <a href="http://www.hk163.com/" onClick="changesever(this);" target="_blank">Flash Casino Online</a>
            <a href="http://www.qeyx.com/" onClick="changesever(this);" target="_blank">QQ Puzzles Online</a>
            <a href="http://www.xydb.com/" onClick="changesever(this);" target="_blank">Real money games</a>
            <a href="http://www.fengzi.net/" onClick="changesever(this);" target="_blank">Crazy Studios</a>
            <a href="http://www.tml.cn/" onClick="changesever(this);" target="_blank">TML LAB</a>
		</div>		
    </div>
</div>
</div>
</div>


<div align="center"  id="banner-small"><img src="../../img/b-xw_en.jpg" width="990" height="120"></div>

<div id="contentbox">
<div id="content">
<div id="main-small">
<div class="linemenu">
   Your current location<a href="../../index_EN.htm">Home</a> &gt;<a href="../../tml/Production_EN.htm">Product system</a></div>
  
  <table>
  
  <tr><td valign=top>
<div id="producemenu"><iframe src="../../tml/menu_en.htm" height=1100 width=210 scrolling="no" border="0" frameborder="0"></iframe></div></td>
<td valign=top>
<div id="txt">

 <h1><SPAN id="result_box2"><SPAN title="" closure_uid_fek2y8="24" tc="Common video game development module" uc="Common video game development module">Common video game   development module</SPAN></SPAN></h1>
 





               <SPAN id="result_box3"><SPAN title="" closure_uid_fek2y8="26" tc="Video module function">Video module function" uc="Video module function">Video module function</SPAN></SPAN>:<br />
               <SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(1) ensure that the development of the software product meets the People's   Republic of law relating to these products." onMouseOut="this.style.backgroundColor='#fff'">(1) ensure that the development of the software product meets the People's   Republic of law relating to these products. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(2) detect the existence of   locally available video input devices." onMouseOut="this.style.backgroundColor='#fff'">(2) detect the existence of   locally available video input devices. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(3) whether there is available   locally and the audio input device." onMouseOut="this.style.backgroundColor='#fff'">(3) whether there is available   locally and the audio input device. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(4) to create the specified size,   location of the window (can be created more). " onMouseOut="this.style.backgroundColor='#fff'">(4) to create the specified size,   location of the window (can be created more). <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(5) destruction of the window." onMouseOut="this.style.backgroundColor='#fff'">(5) destruction of the window. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(6) to obtain the specified   handle of the window has been opened." onMouseOut="this.style.backgroundColor='#fff'">(6) to obtain the specified   handle of the window has been opened. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(7) to the specified window to   display video data." onMouseOut="this.style.backgroundColor='#fff'">(7) to the specified window to   display video data. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(8) broadcast audio data." onMouseOut="this.style.backgroundColor='#fff'">(8) broadcast audio data. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(9) to obtain data from the local   video input devices (to be compressed)." onMouseOut="this.style.backgroundColor='#fff'">(9) to obtain data from the local   video input devices (to be compressed). <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(10) to obtain data on the local   audio input device (to be compressed)." onMouseOut="this.style.backgroundColor='#fff'">(10) to obtain data on the local   audio input evice (to be compressed). <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(11) to provide audio and video   data can be synchronized methods. " onMouseOut="this.style.backgroundColor='#fff'">(11) to provide audio and video   data can be synchronized methods. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(12) can be set to provide audio   and video quality. " onMouseOut="this.style.backgroundColor='#fff'">(12) can be set to provide audio   and video quality. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(13) can set the video size. " onMouseOut="this.style.backgroundColor='#fff'">(13) can set the video size. <BR>
               </SPAN><SPAN onMouseOver="this.style.backgroundColor='#ebeff9'" title="(14) audio and video data   compression ratio to meet the network traffic requirements." onMouseOut="this.style.backgroundColor='#fff'">(14) audio and video data   compression ratio to meet the network traffic requirements.</SPAN><br />
           
           <p><SPAN id="result_box4"><SPAN title="" tc="There are two DLL files" uc="There are two DLL files" closure_uid_qeu8vi="32">There are two DLL   files</SPAN></SPAN><br />
             vcoder.dllandAVMng.dll<br />
             vcoder.dll<SPAN id="result_box5"><SPAN title="" tc="Responsible for video and audio compression and decompression" uc="Responsible for video and audio compression and decompression" closure_uid_qeu8vi="34">Responsible for video and audio compression and   decompression</SPAN></SPAN><br />
             AVMng.dll<SPAN id="result_box6"><SPAN title="" tc="Responsible for creating and managing video and audio objects" uc="Responsible for creating and managing video and audio objects" closure_uid_qeu8vi="38">Responsible for creating and managing video and audio   objects</SPAN></SPAN><br />
           </p>
             <p><SPAN id="result_box7"><SPAN title="" tc="Development Methods" uc="Development Methods" closure_uid_qeu8vi="42">Development   Methods</SPAN></SPAN><br />
               <SPAN id="result_box8"><SPAN title="" tc="Contains the header files" uc="Contains the header files" closure_uid_qeu8vi="46">Contains the header   files</SPAN></SPAN> TMLavmng.h<br />
               <SPAN id="result_box9"><SPAN title="" tc="Will TMLAVMng.lib project can be included in the file stored in the TMLAVMng.rar ,,,,,, the need to purchase before available " uc="Will TMLAVMng.lib project can be included in the file stored in the TMLAVMng.rar ,,,,,, the need to purchase before available  " closure_uid_qeu8vi="64">Will TMLAVMng.lib project can be included in the file   stored in the TMLAVMng.rar ,,,,,, the need to purchase before   available<BR>
               </SPAN><SPAN title="" tc="See examples use the source code" uc="See examples use the source code  " closure_uid_qeu8vi="65">See examples use the source code<BR>
               </SPAN><SPAN title="" tc="Specific functions and methods, please refer to TMLavmng.h documents, detailed notes are as follows" uc="Specific functions and methods, please refer to TMLavmng.h documents, detailed notes are as follows" closure_uid_qeu8vi="66">Specific functions and methods, please refer to   TMLavmng.h documents, detailed notes are as follows</SPAN></SPAN></p>
            <p>&nbsp;</p>
             <p>#pragma once<br />
               #ifndef CTML_AUDIO_VIDEO_MANAGER_2005<br />
               #define CTML_AUDIO_VIDEO_MANAGER_2005</p>
             <p>//<SPAN id="result_box10"><SPAN title="" tc="GoReat (C) www.GuoRuan.com All rights reserved" uc="GoReat (C) www.GuoRuan.com All rights reserved." closure_uid_qeu8vi="70">GoReat (C) www.GuoRuan.com All rights   reserved.</SPAN></SPAN><br />
               // TML&gt;&gt; Crazy Studios www.FengZi.net </p>
             <p>//<SPAN id="result_box11"><SPAN title="" tc="Defined output" uc="Defined output" closure_uid_qeu8vi="74">Defined output</SPAN></SPAN><br />
               #define EXT_CLASS_Video _declspec(dllimport)//<SPAN id="result_box12"><SPAN title="" tc="Import-based DLL" uc="Import-based DLL" closure_uid_qeu8vi="76">Import-based DLL</SPAN></SPAN></p>
             <p>#define SIZE_AUDIO_FRAME	960//<SPAN id="result_box13"><SPAN title="" tc="Recording frame size" uc="Recording frame size" closure_uid_qeu8vi="78">Recording frame   size</SPAN></SPAN><br />
               #define SIZE_AUDIO_PACKED	60//<SPAN id="result_box14"><SPAN title="" tc="Recording Package Size" uc="Recording Package Size" closure_uid_qeu8vi="80">Recording Package   Size</SPAN></SPAN><br />
               #define TML_WAV_NUM_BUF		10//<SPAN id="result_box15"><SPAN title="" tc="For continuous recording, with 10 buffer, to provide audio and video data synchronization" uc="For continuous recording, with 10 buffer, to provide audio and video data synchronization" closure_uid_qeu8vi="82">For continuous recording, with 10 buffer, to provide   audio and video data synchronization</SPAN></SPAN><br />
               #define UDP_PACK_COUNT		5//<SPAN id="result_box16"><SPAN title="" tc="To make video continuously, using sub-5 Video" uc="To make video continuously, using sub-5 Video" closure_uid_qeu8vi="84">To   make video continuously, using sub-5 Video</SPAN></SPAN><br />
               #define MAX_VIDEO			6//<SPAN id="result_box17"><SPAN title="" tc="he maximum number of video" uc="The maximum number of video" closure_uid_qeu8vi="88">The maximum number of   video</SPAN></SPAN><br />
               #define MAX_UDP_SIZE   		1460//<SPAN id="result_box18"><SPAN title="" tc="Microsoft's argument is 1460Byte best to make audio and video data compression ratio to meet the minimum network transmission requirements" uc="Microsoft's argument is 1460Byte best to make audio and video data compression ratio to meet the minimum network transmission requirements" closure_uid_qeu8vi="90">Microsoft's argument is 1460Byte best to make audio and   video data compression ratio to meet the minimum network transmission   requirements</SPAN></SPAN></p>
             <p>#define FRM_SYS_MSG			WM_USER+501 //<SPAN id="result_box19"><SPAN title="" tc="System prompts a message ID" uc="System prompts a message ID" closure_uid_qeu8vi="92">System prompts a   message ID</SPAN></SPAN><br />
               #define FRM_SYS_MSG_CHAR	WM_USER+502 //<SPAN id="result_box20"><SPAN title="" tc="Information message prompted characters" uc="Information message prompted characters" closure_uid_qeu8vi="94">Information   message prompted characters</SPAN></SPAN><br />
               #define SEND_VIDEO			WM_USER+702  //<SPAN id="result_box21"><SPAN title="" tc="Send video message" uc="Send video message" closure_uid_qeu8vi="98">Send video message</SPAN></SPAN><br />
               #define SEND_AUDIO			WM_USER+503  //<SPAN id="result_box22"><SPAN title="" tc="Send audio messages" uc="Send audio messages" closure_uid_qeu8vi="102">Send audio   messages</SPAN></SPAN><br />
               #define BAND_VIDEO			WM_USER+504  //<SPAN id="result_box23"><SPAN title="" tc="Bulk Video Information" uc="Bulk Video Information" closure_uid_qeu8vi="104">Bulk Video   Information</SPAN></SPAN><br />
               #define BAND_AUDIO			WM_USER+505  //<SPAN id="result_box24"><SPAN title="" tc="Bulk audio information" uc="Bulk audio information" closure_uid_qeu8vi="106">Bulk audio   information</SPAN></SPAN></p>
             <p>#define OUT_BMP_WIDTH	160<br />
               #define OUT_BMP_HEIGHT	120</p>
             <p>#define TMLbmpSize OUT_BMP_WIDTH*OUT_BMP_HEIGHT*3//<SPAN id="result_box25"><SPAN title="" tc="When biBitCount = 24 hours, 1 pixel, 3 bytes" uc="When biBitCount = 24 hours, 1 pixel, 3 bytes" closure_uid_qeu8vi="108">When biBitCount = 24 hours, 1 pixel, 3   bytes</SPAN></SPAN>;</p>
             <p>#define FLAG_AUDIO			0x3131<br />
               #define FLAG_VIDEO			0x3132</p>
             <p>#include &lt;vfw.h&gt;<br />
               #include &quot;TMLvcoder.h&quot;</p>
             <p>class CTMLvcoder //<SPAN id="result_box26"><SPAN title="" tc="Encapsulates the compression function" uc="Encapsulates the compression function" closure_uid_qeu8vi="110">Encapsulates   the compression function</SPAN></SPAN><br />
               {<br />
               public://<SPAN id="result_box27"><SPAN title="" tc="Public function can be called external" uc="Public function can be called external" closure_uid_qeu8vi="112">Public   function can be called external</SPAN></SPAN><br />
               CTMLvcoder() ; <br />
               ~CTMLvcoder() ; <br />
               void            Open();<br />
               void            Close();<br />
               int				dec_core(LPVOID bitstream, LPVOID image, int bs_size) ;<br />
               int				enc_core(LPVOID image,LPVOID bitstream, int *key);</p>
             <p>private://<SPAN id="result_box28"><SPAN title="" tc="Internal variables, the basic properties of the video" uc="Internal variables, the basic properties of the video" closure_uid_qeu8vi="114">Internal variables, the basic properties of the   video</SPAN></SPAN><br />
               static void     XVID_GLOBAL_INIT();<br />
               void *           m_enc_handle;<br />
               void *           m_dec_handle;<br />
               };</p>
             <p>//<SPAN id="result_box29"><SPAN title="" tc="Video packet (does not contain video data)" uc="Video packet (does not contain video data)" closure_uid_qeu8vi="116">Video   packet (does not contain video data)</SPAN></SPAN><br />
               typedef struct<br />
               {<br />
               short	flag;<br />
               BYTE	id;<br />
               BYTE	bDeskStation;//<SPAN id="result_box30"><SPAN title="" tc="Location" uc="Location" closure_uid_qeu8vi="118">Location</SPAN></SPAN><br />
               BYTE	subid;<br />
               unsigned short video_size;<br />
               }PACK_VIDEO;</p>
             <p>//<SPAN id="result_box31"><SPAN title="" tc="Audio data packets (including audio data)" uc="Audio data packets (including audio data)" closure_uid_qeu8vi="122">Audio   data packets (including audio data)</SPAN></SPAN><br />
               typedef struct<br />
               {	short flag; <br />
               BYTE bDeskStation;//<SPAN id="result_box32"><SPAN title="" tc="Table Position" uc="Table Position" closure_uid_qeu8vi="124">Table Position</SPAN></SPAN><br />
               BYTE data[SIZE_AUDIO_PACKED];<br />
               }PACK_AUDIO;</p>
             <p>//<SPAN id="result_box33"><SPAN title="" tc="Video Package" uc="Video Package" closure_uid_qeu8vi="126">Video Package</SPAN></SPAN><br />
               typedef struct <br />
               {<br />
               BITMAPINFO* header;<br />
               LPVOID bits;<br />
               }VideoPack;</p>
             <p>//<SPAN id="result_box34"><SPAN title="" tc="Video display window data structure" uc="Video display window data structure" closure_uid_qeu8vi="128">Video display   window data structure</SPAN></SPAN><br />
               typedef struct <br />
               {<br />
               HWND m_hVideoWnd;<br />
               bool m_bOpenVideo;<br />
               bool m_bOpenVioce;<br />
               bool m_bCamera;<br />
               }VideoViewStruct;</p>
             <p>//<SPAN id="result_box35"><SPAN title="" tc="Video Control Class" uc="Video Control Class" closure_uid_qeu8vi="132">Video Control   Class</SPAN></SPAN><br />
               class EXT_CLASS_Video TMLavmng<br />
               {<br />
               /**************************<SPAN id="result_box36"><SPAN title="" tc="Recording part of the" uc="Recording part of the" closure_uid_qeu8vi="136">Recording part of   the</SPAN></SPAN>************************************/<br />
               private:<br />
               //<SPAN id="result_box37"><SPAN title="" tc="Initialize audio" uc="Initialize audio" closure_uid_qeu8vi="138">Initialize audio</SPAN></SPAN><br />
               bool initAudio();<br />
               //<SPAN id="result_box38"><SPAN title="" tc="Voice input thread, including voice compression" uc="Voice input thread, including voice compression" closure_uid_qeu8vi="140">Voice input thread, including voice   compression</SPAN></SPAN><br />
               static DWORD WINAPI AudioInThreadProc(LPVOID lpParameter);<br />
               //<SPAN id="result_box39"><SPAN title="" tc="Open the recording equipment" uc="Open the recording equipment" closure_uid_qeu8vi="144">Open the recording   equipment</SPAN></SPAN><br />
               BOOL OpenDev(WAVEFORMATEX* pfmt,DWORD dwCallback,DWORD dwCallbackInstance,DWORD fdwOpen);<br />
               //<SPAN id="result_box40"><SPAN title="" tc="A group of memory allocated for the recording" uc="A group of memory allocated for the recording" closure_uid_qeu8vi="146">A   group of memory allocated for the recording</SPAN></SPAN><br />
               BOOL AllocBuffer();<br />
               //<SPAN id="result_box41"><SPAN title="" tc="Compressed audio data and send out the original" uc="Compressed audio data and send out the original" closure_uid_qeu8vi="148">Compressed audio data and send out the   original</SPAN></SPAN><br />
               void OnEncodeAudioData(char* pin);</p>
             <p> //<SPAN id="result_box42"><SPAN title="" tc="Variable" uc="Variable" closure_uid_qeu8vi="150">Variable</SPAN></SPAN><br />
               //<SPAN id="result_box43"><SPAN title="" tc="Audio Network Packet" uc="Audio Network Packet" closure_uid_qeu8vi="152">Audio Network   Packet</SPAN></SPAN><br />
               PACK_AUDIO m_AudioPack;<br />
               //<SPAN id="result_box44"><SPAN title="" tc="Local recording of data packets" uc="Local recording of data packets" closure_uid_qeu8vi="154">Local recording of   data packets</SPAN></SPAN><br />
               char					m_AudioLocal[SIZE_AUDIO_FRAME];<br />
               //<SPAN id="result_box45"><SPAN title="" tc="Recording handle" uc="Recording handle" closure_uid_qeu8vi="156">Recording handle</SPAN></SPAN><br />
               HANDLE					m_hAudioIn;<br />
               //<SPAN id="result_box46"><SPAN title="" tc="Recording thread ID" uc="Recording thread ID" closure_uid_qeu8vi="158">Recording thread   ID</SPAN></SPAN><br />
               DWORD					m_dwAudioInId;<br />
               //<SPAN id="result_box47"><SPAN title="" tc="Recording hardware handle" uc="Recording hardware handle" closure_uid_qeu8vi="162">Recording hardware   handle</SPAN></SPAN><br />
               HWAVEIN					m_hIn;<br />
               WAVEHDR*				m_pHdr;<br />
               /**************************<SPAN id="result_box48"><SPAN title="" tc="Some broadcast" uc="Some broadcast" closure_uid_qeu8vi="164">Some broadcast</SPAN></SPAN>************************************/</p>
             <p> //<SPAN id="result_box49"><SPAN title="" tc="Audio output thread, including the audio decoding" uc="Audio output thread, including the audio decoding" closure_uid_qeu8vi="166">Audio output thread, including the audio   decoding</SPAN></SPAN><br />
               static DWORD WINAPI AudioOutThreadProc(LPVOID lpParameter);<br />
               //<SPAN id="result_box50"><SPAN title="" tc="Play a piece of data" uc="Play a piece of data" closure_uid_qeu8vi="168">Play a piece of   data</SPAN></SPAN><br />
               BOOL AudioPlay(char* buf,UINT uSize);<br />
               //<SPAN id="result_box51"><SPAN title="" tc="Variable" uc="Variable" closure_uid_qeu8vi="170">Variable</SPAN></SPAN><br />
               //<SPAN id="result_box52"><SPAN title="" tc="After decoding the broadcasting data" uc="After decoding the broadcasting data" closure_uid_qeu8vi="172">After   decoding the broadcasting data</SPAN></SPAN><br />
               char m_AudioRemote[SIZE_AUDIO_FRAME];<br />
               //<SPAN id="result_box53"><SPAN title="" tc="Broadcast handle" uc="Broadcast handle" closure_uid_qeu8vi="174">Broadcast handle</SPAN></SPAN><br />
               HANDLE m_hAudioOut;<br />
               //<SPAN id="result_box54"><SPAN title="" tc="Thread ID Broadcasting" uc="Thread ID Broadcasting" closure_uid_qeu8vi="176">Thread ID   Broadcasting</SPAN></SPAN><br />
               DWORD m_dwAudioOutId;<br />
               //<SPAN id="result_box55"><SPAN title="" tc="Broadcast the number of buffer blocks" uc="Broadcast the number of buffer blocks" closure_uid_qeu8vi="178">Broadcast   the number of buffer blocks</SPAN></SPAN><br />
               int m_iAudioOutBuf;<br />
               //<SPAN id="result_box56"><SPAN title="" tc="Broadcast hardware handle" uc="Broadcast hardware handle" closure_uid_qeu8vi="180">Broadcast hardware   handle</SPAN></SPAN><br />
               HWAVEOUT m_hOut;<br />
               /**************************<SPAN id="result_box57"><SPAN title="" tc="Video section" uc="Video section" closure_uid_qeu8vi="182">Video section</SPAN></SPAN>************************************/<br />
               //<SPAN id="result_box58"><SPAN title="" tc="Private variables" uc="Private variables" closure_uid_qeu8vi="188">Private variables</SPAN></SPAN><br />
               private:<br />
               //<SPAN id="result_box59"><SPAN title="" tc="Definition codec pointer" uc="Definition codec pointer" closure_uid_qeu8vi="194">Definition codec   pointer</SPAN></SPAN><br />
               CTMLvcoder *		m_pVcoder[MAX_VIDEO]; <br />
               bool				m_bEnable;//<SPAN id="result_box60"><SPAN title="" tc="Enabled" uc="Enabled" closure_uid_qeu8vi="198">Enabled</SPAN></SPAN><br />
               UINT				m_iPackID;//<SPAN id="result_box61"><SPAN title="" tc="Package ID" uc="Package ID" closure_uid_qeu8vi="200">Package ID</SPAN></SPAN><br />
               char				m_VideoPack[MAX_UDP_SIZE];// want to send the video package, compressed<br />
               char				m_VideoRev[MAX_VIDEO][MAX_UDP_SIZE*UDP_PACK_COUNT];//<SPAN id="result_box62"><SPAN title="" tc="Received video packets, each user of a variable can not be mixed" uc="Received video packets, each user of a variable can not be mixed" closure_uid_qeu8vi="204">Received video packets, each user of a variable can not   be mixed</SPAN></SPAN><br />
               char				m_OutBmp[TMLbmpSize];//<SPAN id="result_box63"><SPAN title="" tc="Canvas unlock remote cache, the so-called double-buffering, many of the drawing can be mixed" uc="Canvas unlock remote cache, the so-called double-buffering, many of the drawing can be mixed" closure_uid_qeu8vi="208">Canvas unlock remote cache, the so-called   double-buffering, many of the drawing can be mixed</SPAN></SPAN><br />
               char				m_MyEnData[OUT_BMP_WIDTH*OUT_BMP_WIDTH];<br />
               HWND				m_hTMLframe;//<SPAN id="result_box64"><SPAN title="" tc="Framework handle" uc="Framework handle" closure_uid_qeu8vi="210">Framework handle</SPAN></SPAN><br />
               BYTE				m_bTeamPeople;//<SPAN id="result_box65"><SPAN title="" tc="Desktop size" uc="Desktop size" closure_uid_qeu8vi="212">Desktop size</SPAN></SPAN><br />
               BYTE				m_bMeDeskStation;//<SPAN id="result_box66"><SPAN title="" tc="My location" uc="My location" closure_uid_qeu8vi="214">My location</SPAN></SPAN><br />
               VideoViewStruct  *	m_pVideoView[MAX_VIDEO]; //<SPAN id="result_box67"><SPAN title="" tc="Video handle" uc="Video handle" closure_uid_qeu8vi="216">Video handle</SPAN></SPAN><br />
               HWND				m_CapWnd;<br />
               CAPTUREPARMS		m_CapConfig;<br />
               BITMAPINFO			m_GetBitFormat;<br />
               BITMAPINFO  		m_SetBitFormat;<br />
               bool				m_bCanP2P[MAX_VIDEO]; //<SPAN id="result_box68"><SPAN title="" tc="Whether through the P2P" uc="Whether through the P2P" closure_uid_qeu8vi="218">Whether through the   P2P</SPAN></SPAN></p>
             <p>private://<SPAN id="result_box69"><SPAN title="" tc="Private Function" uc="Private Function" closure_uid_qeu8vi="220">Private Function</SPAN></SPAN><br />
               //<SPAN id="result_box70"><SPAN title="" tc="Callback function" uc="Callback function" closure_uid_qeu8vi="222">Callback function</SPAN></SPAN><br />
               static LRESULT CALLBACK OnCaptureVideo(HWND hWnd, LPVIDEOHDR lpheader);</p>
             <p> //Whether to send video<br />
               void CanSendVideoData(LPVOID pv); </p>
             <p> //<SPAN id="result_box71"><SPAN title="" tc="Video compression and send" uc="Video compression and send" closure_uid_qeu8vi="228">Video compression and   send</SPAN></SPAN><br />
               void EncodeSendVideo(LPVOID pv);</p>
             <p> ///<SPAN id="result_box72"><SPAN title="" tc="Initial Compression Manager" uc="Initial Compression Manager" closure_uid_qeu8vi="230">Initial Compression   Manager</SPAN></SPAN> <br />
               void InitParam();</p>
             <p> //<SPAN id="result_box73"><SPAN title="" tc="Send Video" uc="Send Video" closure_uid_qeu8vi="232">Send Video</SPAN></SPAN><br />
               void SendVideo(BYTE bDstStation,VideoPack * pVideoPack);</p>
             <p> //<SPAN id="result_box74"><SPAN title="" tc="Photo" uc="Photo" closure_uid_qeu8vi="234">Photo</SPAN></SPAN><br />
               void Camera(VideoPack * pVideoPack);</p>
             <p>public:<br />
               //<SPAN id="result_box75"><SPAN title="" tc="Constructor" uc="Constructor" closure_uid_qeu8vi="236">Constructor</SPAN></SPAN><br />
               TMLavmng(void);</p>
             <p> //<SPAN id="result_box76"><SPAN title="" tc="Destructor" uc="Destructor" closure_uid_qeu8vi="240">Destructor</SPAN></SPAN><br />
               ~TMLavmng(void);</p>
             <p> //<SPAN id="result_box77"><SPAN title="" tc="Initialization" uc="Initialization" closure_uid_qeu8vi="242">Initialization</SPAN></SPAN><br />
               void initAVmng(BYTE bTeamPeople,BYTE bMeDeskStation,HWND hTMLframe);</p>
             <p> //<SPAN id="result_box78"><SPAN title="" tc="Available locally and the existence of the video input device" uc="Available locally and the existence of the video input device" closure_uid_qeu8vi="244">Available locally and the existence of the video input   device</SPAN></SPAN><br />
               bool IsExistCap();</p>
             <p> //<SPAN id="result_box79"><SPAN title="" tc="Detect the existence of the local audio input device available" uc="Detect the existence of the local audio input device available" closure_uid_qeu8vi="246">Detect the existence of the local audio input device   available</SPAN></SPAN><br />
               bool IsExistAudio();</p>
             <p> //<SPAN id="result_box80"><SPAN title="" tc="Set audio and video quality" uc="Set audio and video quality" closure_uid_qeu8vi="248">Set audio and video   quality</SPAN></SPAN><br />
               void SetQuality(BYTE tQuality);</p>
             <p> //<SPAN id="result_box81"><SPAN title="" tc="Close camera" uc="Close camera" closure_uid_qeu8vi="250">Close camera</SPAN></SPAN><br />
               void ExitCap();</p>
             <p> //<SPAN id="result_box82"><SPAN title="" tc="Open the camera" uc="Open the camera" closure_uid_qeu8vi="252">Open the camera</SPAN></SPAN><br />
               void OpenCap(int DrvID);</p>
             <p> //<SPAN id="result_box83"><SPAN title="" tc="Video decoding and playback" uc="Video decoding and playback" closure_uid_qeu8vi="254">Video decoding and   playback</SPAN></SPAN><br />
               void OnDecodeVideoData(PACK_VIDEO* ppv);</p>
             <p> //<SPAN id="result_box84"><SPAN title="" tc="Audio decoding, and audio data sent to the window you want the data" uc="Audio decoding, and audio data sent to the window you want the data" closure_uid_qeu8vi="256">Audio decoding, and audio data sent to the window you   want the data</SPAN></SPAN><br />
               void OnDecodeAudioData(char *pin,BYTE bDstStation);</p>
             <p> //<SPAN id="result_box85"><SPAN title="" tc="The seat set to P2P" uc="The seat set to P2P" closure_uid_qeu8vi="258">The seat set to   P2P</SPAN></SPAN><br />
               void SetCanP2P(BYTE bStation);</p>
             <p> //<SPAN id="result_box86"><SPAN title="" tc="The seat can be P2P" uc="The seat can be P2P" closure_uid_qeu8vi="260">The seat can be   P2P</SPAN></SPAN><br />
               bool GetCanP2P(BYTE bStation);</p>
             <p> //<SPAN id="result_box87"><SPAN title="" tc="Get a pointer to the video view" uc="Get a pointer to the video view" closure_uid_qeu8vi="262">Get a pointer to   the video view</SPAN></SPAN><br />
               VideoViewStruct * GetVideoView(BYTE bStation);</p>
             <p> //<SPAN id="result_box88"><SPAN title="" tc="Set the video view of the pointer" uc="Set the video view of the pointer" closure_uid_qeu8vi="264">Set the video   view of the pointer</SPAN></SPAN><br />
               void SetVideoView(VideoViewStruct * pVideoView,BYTE bStation);<br />
  <br />
               //<SPAN id="result_box89"><SPAN title="" tc="Drawing video function static member functions" uc="Drawing video function static member functions" closure_uid_qeu8vi="266">Drawing video function static member   functions</SPAN></SPAN><br />
               static void DrawVideo(HWND h, <br />
               IN int      xDst,<br />
               IN int      yDst,<br />
               IN int      dxDst,<br />
               IN int      dyDst,<br />
               VideoPack * pVideoPack<br />
               );<br />
               };</p>
           <p>#endif</p>
             <p><a style="color:#F00" href="vcode.rar">Source code download http://www.guoruan.com/soft/sell/vcode.rar</a></p>


</td>
         </tr>

</table>
</td></tr></table>


 <marquee scrollAmount=10000 width="1" height="6">
 <SPAN id="result_box"><SPAN title="" tc="Specific product are as follows" uc="Specific product are as follows" closure_uid_o2e3o3="24">Specific product   are as follows</SPAN></SPAN><br />
                   Landlords mentor, mentor chess software, Befrienders card games, mahjong games good friends, good friends chess game source code, Befrienders website version board games, chess games good friends, good friends chess game code, card and board games platform to sell Befrienders , Befrienders flash chess game source code, good friends flash chess game, chess mentor flash games, board games Befrienders flash software, flash chess game development good friends, good friends chess game source code, purchase Befrienders board games, buy mentor network chess, chess mentor network platform, mentor network chess game development, good friends chess game development, development of good friends here chess game, chess game development company mentor, mentor network chess development company, good friends video game development, Video Voice chess game development mentor.                  
                   
                   </marquee>  
                   

  <h1>&nbsp;</h1>
<p><br>
</p>
</div>
</div>
</div>
<div class="clear"></div>

<div id="foot">
    <div class="copyright">
        <div class="foot-nav">
            <dl>
                <dd>
                    <a href="Javascript:window.external.addFavorite('http://www.guoruan.com','GoReat - China's Software Outsourcing Brand')" target="_self">Add Bookmark </a>
                </dd>
                <dd>
                    <a href="../../index_en.htm">HomePage </a></dd><dd><a href="../../tml/pay_en.htm">Payment </a></dd>
                </dd>
                <dd>
                    <a href="../../tml/Conncetus_en.htm">Contact Us </a>                </dd>
                <dd>
                    <a onClick="this.style.behavior='url(#default#homepage)';this.setHomePage('http://www.guoruan.com');" href="#">Set as Home</a></dd>
            </dl>
        </div>
        <div class="copyinfo">
           Copyright &#169; 1997 - 2010 GuoRuan All Rights Reserved</div>
</div></div>
</body>
</html>